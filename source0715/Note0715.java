package source0715;

public class Note0715 {
}

/*

카드 과제
    remove()인덱스 사용 객체 삭제 후 리턴

    처음 만들때 함수만 만들어놓고 함수내용은 print로 제대로 동작하는지 먼저 확인
        함수 세부내용은 나중에

    손으로 그려보기


국가 과제
    update
        키가 hashMap에 있는지부터 확인
        hashmap에서는 업데이트 따로 없고 동일한 키에 값 대입하면 된다. 이걸 메소드로

        람다식을 이용할 수 도 있다
        (오름차순 정렬)
        단, 람다식은 1.알아보기 어렵고, 2.디버깅이 어렵다 남용 x

        객체::메소드
            객체안의 메소드를 참조하시오(람다식 배워야 안다)


=============================================
멀티스레드

멀티태스킹
    여러개의 작업을 동시에 한다.

멀티 스레딩
    하나의 응용프로그램이 여러개의 작업을 동시에 처리


프로세스
    실행 중인 프로그램, 애플리케이션

스레드
    하나의 프로세스 내부에서 동작하는 작업 단위(main함수?)
    light-weight process
    최소한의 일만 처리하도록

멀티스레딩
    하나의 응용프로그램을 동시 처리가 가능한 여러 작업(코드)으로 분할
    각 스레드가 하나의 작업을 처리하는 방식
    모든 스레드는 프로세스(응용프로그램) 내부의 자원과 메모리 공유
    Heap 영역(객체) 공유
    쓰는 이유:
        프로그램 동작의 시간 지연을 줄임
        한 스레드가 대기하는 동안 다른 스레드가 동작

    예시: 수강신청 경북대 웹페이지
        사용자별로 스레드를 만들고, 각 스레드가 각 작업을 처리

작업 스레드
    main thread
        main()메소드의 코드 순차적 실행

    멀티 스레드
        실행중인 스레드가 하나라도 있으면, 프로세스는 종료되지 않음

    메인 스레드가 작업 스레드보다 먼저 종료될 경우
        작업 스레드가 계속 실행중인 경우, 프로세스는 종료되지 않음


Thread의 start()메소드 호출
    Thread 동작을 위한 준비 단계로 진입
    준비상태(Runnable)로 진입 후 스케줄러가 정한 순서에 따라 해당 Thread 실행



1초 단위의 타이머 스레드 예제
    2가 JLable
    Thread를 사속받은 타이머.. -> Title
    setDefaultCloseOperation: x누르면 창 닫히도록


yield() 잘 쓸일 없다

멀티 스레드 환경에서 공유 자원 충돌 사례

    멀티 스레드 프로그램 작성시 주의점
        다수의 스레드가 공유데이터에 동시에 접근하는 경우:
        -공유 데이터의 값에 예상치 못한 결과 발생



이를 해결하기 위한
스레드 동기화 기법 (Thread Synchronization)
    한 번에 하나의 스레드만 공유 데이터에 접근 가능하도록(배타적 독점 접근 보장)

    동기화 방법:
        1) synchronized 키워드 사용
            동기화 블록 지정
            코드 블록을 동기화가 설정된 임계 영역으로 설정
            임계 영역(Critical Section) 어느 한 순간에는 하나의 스레드만 진입(사용)가능한 영역

        2) wait()-notify() 메소드



        3) Semaphore 클래스 활용


synchronized 동기화 메소드 및 블록 선언
    먼저 실행한 스레드가 해당 자원을 독점적으로 소유
    !자원을 소유한 스레드가 자원을 내놓을 때까지 다른 스레드는 대기
    진입할 때 lock, 빠져나올 떄 unlock 자동으로 이루어짐


동기화 문제 발생 원인
    우리가 스케줄링을 제어할 수 없다.
    단계단계마다 다른 코드가 들어올수 있다.


Prodecer-Consumer 문제와 동기화
    생산자: 공유 메모리에 데이터를 공급하는 스레드
    소비자: 공유 메모리에 데이터를 소비하는 스레드
    문제점: producer와 consumer가 동시에 공유 데이터를 접근

wait(), notify(), notifyAll() 메소드를 이용한 스레드 동기화 기법

Semaphore
    가장 많이 쓰는건 binary Semaphore
    항상 fill 먼저하고 consume 할 수 있도록

컴퓨터학부 전필 다 듣기

~~ new MyThread(a,b,c) -> a,b,c를 객체에 전달?

스레드 안전 종료
    interrupt() 메소드 사용: 타 스레드에서 강제 종료
    예외 처리를 통해 run() 메소드를 정상 종료 시킴

데몬 스레드(Daemon Thread)
    주 스레드의 작업을 돕는 보조적인 역할을 수행하는 스레드
    주 스레드가 종료되면, 데몬 스레드도 자동 종료
    ex) 워드 프로세서의 자동 저장
        미디어 플레이어의 동영상 및 음악 재생
        JVM의 garbage collection

Thread Callback(어려움)
    Thread 동작 중 값 반환
    Thread의 run() 메소드는 값을 반환하지 않음

    Thread 내부에서 특정 동작이 완료되는 시점이나 진행 중인 값을 확인 하는 방법
        폴링:
            무한 반복을 하면서 상태(값)을 확인
            CPU 낭비 너무 심함

        콜백:
            피호출자가 호출자를 다시 호출하는 방법
            어떤 동작이 끝났음을 호출한 곳(객체)에게 알리는 방법

Callback 예제
    #2
    BufferReader : 1줄씩 읽어오기 위함


    #3
    this로 자기 자신 전달

55p 헷갈리면  56p 활용

58p
1번 2번 같은 방법
    1번 쓰면 된다, 2번은 이런게 있다는 거만 알기


과제 한글 깨지면 euc-kr로 바꾸면된다



 */